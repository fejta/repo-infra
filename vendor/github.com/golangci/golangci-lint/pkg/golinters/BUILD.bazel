load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "bodyclose.go",
        "deadcode.go",
        "depguard.go",
        "dupl.go",
        "errcheck.go",
        "funlen.go",
        "gochecknoglobals.go",
        "gochecknoinits.go",
        "goconst.go",
        "gocritic.go",
        "gocyclo.go",
        "gofmt.go",
        "golint.go",
        "gosec.go",
        "govet.go",
        "ineffassign.go",
        "interfacer.go",
        "lll.go",
        "maligned.go",
        "megacheck.go",
        "misspell.go",
        "nakedret.go",
        "prealloc.go",
        "scopelint.go",
        "structcheck.go",
        "typecheck.go",
        "unconvert.go",
        "unparam.go",
        "util.go",
        "varcheck.go",
    ],
    importmap = "k8s.io/repo-infra/vendor/github.com/golangci/golangci-lint/pkg/golinters",
    importpath = "github.com/golangci/golangci-lint/pkg/golinters",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/OpenPeeDeeP/depguard:go_default_library",
        "//vendor/github.com/go-lintpack/lintpack:go_default_library",
        "//vendor/github.com/golangci/check/cmd/structcheck:go_default_library",
        "//vendor/github.com/golangci/check/cmd/varcheck:go_default_library",
        "//vendor/github.com/golangci/dupl:go_default_library",
        "//vendor/github.com/golangci/errcheck/golangci:go_default_library",
        "//vendor/github.com/golangci/go-misc/deadcode:go_default_library",
        "//vendor/github.com/golangci/go-tools/config:go_default_library",
        "//vendor/github.com/golangci/go-tools/lint:go_default_library",
        "//vendor/github.com/golangci/go-tools/lint/lintutil:go_default_library",
        "//vendor/github.com/golangci/go-tools/simple:go_default_library",
        "//vendor/github.com/golangci/go-tools/staticcheck:go_default_library",
        "//vendor/github.com/golangci/go-tools/stylecheck:go_default_library",
        "//vendor/github.com/golangci/go-tools/unused:go_default_library",
        "//vendor/github.com/golangci/goconst:go_default_library",
        "//vendor/github.com/golangci/gocyclo/pkg/gocyclo:go_default_library",
        "//vendor/github.com/golangci/gofmt/gofmt:go_default_library",
        "//vendor/github.com/golangci/gofmt/goimports:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/config:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/fsutils:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/golinters/goanalysis:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/golinters/goanalysis/passes/nilness:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/lint/linter:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/logutils:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/packages:go_default_library",
        "//vendor/github.com/golangci/golangci-lint/pkg/result:go_default_library",
        "//vendor/github.com/golangci/gosec:go_default_library",
        "//vendor/github.com/golangci/gosec/rules:go_default_library",
        "//vendor/github.com/golangci/ineffassign:go_default_library",
        "//vendor/github.com/golangci/lint-1:go_default_library",
        "//vendor/github.com/golangci/maligned:go_default_library",
        "//vendor/github.com/golangci/misspell:go_default_library",
        "//vendor/github.com/golangci/prealloc:go_default_library",
        "//vendor/github.com/golangci/unconvert:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/github.com/sourcegraph/go-diff/diff:go_default_library",
        "//vendor/github.com/timakin/bodyclose/passes/bodyclose:go_default_library",
        "//vendor/github.com/ultraware/funlen:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/asmdecl:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/assign:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/atomic:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/atomicalign:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/bools:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/buildtag:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/cgocall:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/composite:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/copylock:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/httpresponse:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/loopclosure:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/lostcancel:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/nilfunc:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/printf:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/shadow:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/shift:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/stdmethods:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/structtag:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/tests:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/unmarshal:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/unreachable:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/unsafeptr:go_default_library",
        "//vendor/golang.org/x/tools/go/analysis/passes/unusedresult:go_default_library",
        "//vendor/golang.org/x/tools/go/loader:go_default_library",
        "//vendor/golang.org/x/tools/go/packages:go_default_library",
        "//vendor/golang.org/x/tools/imports:go_default_library",
        "//vendor/mvdan.cc/interfacer/check:go_default_library",
        "//vendor/mvdan.cc/unparam/check:go_default_library",
    ],
)
